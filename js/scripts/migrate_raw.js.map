{"version":3,"sources":["/projects/nodejs/botbuilder/mongoose_record_replay/src/../src/scripts/migrate_raw.ts"],"names":[],"mappings":";AAAA;;;;GAIG;;AAMH,MAAM,QAAQ,GAAG,0BAA0B,CAAC;AAC5C,MAAM,SAAS,GAAG,gBAAgB,CAAC;AAEnC,yBAAyB;AAEzB,IAAI,CAAC;IAEL,EAAE,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;IACpB,EAAE,CAAC,SAAS,CAAC,gBAAgB,CAAC,CAAC;AAC/B,CAAC;AAAC,KAAK,CAAA,CAAC,CAAC,CAAC,CAAC,CAAC;AAEZ,CAAC;AAED,+CAA+C;AAI/C,iDAAiD;AACjD,MAAM,QAAQ,GAAG,OAAO,CAAC,UAAU,CAAC,CAAC;AAGrC,IAAI,YAAY,GAAG;IACf,OAAO,EAAG,QAAQ;IAClB,YAAY,EAAG,gBAAgB;IAC/B,KAAK,EAAG,WAAW;IACnB,eAAe,EAAG,eAAe;IACjC,YAAY,EAAG,YAAY;IAC3B,WAAW,EAAE,WAAW;IACxB,UAAU,EAAG,UAAU;IACvB,OAAO,EAAG,OAAO;CACpB,CAAA;AAGD,qBAAqB,cAAsB,EAAE,aAAqB,EAAE,YAAqB;IAErF,IAAI,YAAY,GAAG,YAAY,CAAC,YAAY,CAAC,CAAC;IAChD,IAAI,GAAG,GAAG,GAAG,CAAC,SAAS,CAAC,cAAc,EAAE,YAAY,CAAC,CAAC;IACtD,IAAI,MAAM,GAAG,GAAG,CAAC,cAAc,CAAC,YAAY,EAAE,GAAG,CAAC,CAAC;IACnD,EAAE,CAAC,aAAa,CAAC,aAAa,GAAI,GAAG,GAAE,YAAY,GAAG,4BAA4B,EAAG,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,SAAS,EAAE,CAAC,CAAC,CAAC,CAAC;IAC3H,IAAI,WAAW,GAAG,GAAG,CAAC,YAAY,CAAC,YAAY,EAAE,GAAG,CAAC,CAAC;IACtD,EAAE,CAAC,aAAa,CAAC,aAAa,GAAI,GAAG,GAAE,YAAY,GAAG,iBAAiB,EAAG,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE,SAAS,EAAE,CAAC,CAAC,CAAC,CAAC;IACrH,IAAI,OAAO,GAAG,GAAG,CAAC,aAAa,CAAC,cAAc,EAAE,YAAY,CAAC,CAAC;IAC9D,IAAI,OAAO,GAAG,GAAG,CAAC,aAAa,CAAC,OAAO,EAAC,GAAG,CAAC,CAAC;IAC/C,iBAAiB;IACf,EAAE,CAAC,aAAa,CAAC,aAAa,GAAG,GAAG,GAAG,YAAY,GAAG,YAAY,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,EAAC,SAAS,EAAC,CAAC,CAAC,CAAC,CAAC;AAC3G,CAAC;AAED,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,OAAO,CAAE,GAAG;IAClC,WAAW,CAAC,QAAQ,EAAE,SAAS,EAAE,GAAG,CAAC,CAAC;IACtC,OAAO,CAAC,GAAG,CAAC,aAAa,GAAG,GAAG,CAAC,CAAC;AACrC,CAAC,CAAC,CAAC","file":"scripts/migrate_raw.js","sourcesContent":["/**\r\n * (C) gerd forstmann 2017\r\n *\r\n * Create database\r\n */\r\n\r\nimport * as Constants from './../constants';\r\nimport * as Model from 'mgnlq_model';\r\n\r\n\r\nconst folderin = 'model_raw_old/testmodel2';\r\nconst folderout = 'tmp/testmodel2';\r\n\r\nimport * as fs from 'fs';\r\n\r\ntry {\r\n\r\nfs.mkdirSync('tmp');\r\nfs.mkdirSync('tmp/testmodel2');\r\n} catch(e) {\r\n\r\n}\r\n\r\nimport * as m2s from '../migrate/model2schema';\r\n\r\nimport { Dataload as Dataload } from 'mgnlq_model';\r\n\r\n// var FUtils = require(root + '/model/model.js')\r\nconst mongoose = require('mongoose');\r\n\r\n\r\nvar ModelNameMap = {\r\n    \"iupac\" : \"iupacs\",\r\n    \"GeneticDNA\" : \"dna_aminoacids\",\r\n    \"bom\" : \"fioriapps\",\r\n    \"twf_countries\" : \"twf_countries\",\r\n    \"twf_fields\" : \"twf_fields\",\r\n    \"questions\": \"questions\",\r\n    \"commands\" : \"commands\",\r\n    \"hints\" : \"hints\"\r\n}\r\n\r\n\r\nfunction migrateData(sourcmodelpath: string, destmodelpath: string, modelnameold : string) {\r\n\r\n    var modelnamenew = ModelNameMap[modelnameold];\r\n  var mdl = m2s.loadModel(sourcmodelpath, modelnameold);\r\n  var schema = m2s.mergeModelJson(modelnamenew, mdl);\r\n  fs.writeFileSync(destmodelpath +  '/'+ modelnamenew + '.model.mongooseschema.json' , JSON.stringify(schema, undefined, 2));\r\n  var newmodeldoc = m2s.makeModelDoc(modelnamenew, mdl);\r\n  fs.writeFileSync(destmodelpath +  '/'+ modelnamenew + '.model.doc.json' , JSON.stringify(newmodeldoc, undefined, 2));\r\n  var mdldata = m2s.loadModelData(sourcmodelpath, modelnameold);\r\n  var mdlDocs = m2s.makeDocuments(mdldata,mdl);\r\n// write the data\r\n  fs.writeFileSync(destmodelpath + '/' + modelnamenew + '.data.json', JSON.stringify(mdlDocs,undefined,2));\r\n}\r\n\r\nObject.keys(ModelNameMap).forEach( key =>{\r\n    migrateData(folderin, folderout, key);\r\n    console.log(` migrated ${key} `);\r\n});"],"sourceRoot":"ABC"}