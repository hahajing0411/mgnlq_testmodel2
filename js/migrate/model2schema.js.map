{"version":3,"sources":["/projects/nodejs/botbuilder/mongoose_record_replay/src/../src/migrate/model2schema.ts"],"names":[],"mappings":"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","file":"migrate/model2schema.js","sourcesContent":["'use strict'\r\n\r\n/**\r\n * (C) gerd forstmann 2017\r\n *\r\n * convert model file into an mongoose schema\r\n */\r\n\r\n//import * as intf from 'constants';\r\nimport * as debug from 'debug';\r\n\r\nimport * as _ from 'lodash';\r\n\r\n//import { IFModel }*  as IFModel  from '../match/ifmatch';\r\n\r\n\r\nimport { IFModel as IFModel } from 'mgnlq_model';\r\n//var IFModel = IFMatch.IModel;\r\n\r\nvar debuglog = debug('model');\r\n\r\nimport * as fs from 'fs';\r\n\r\nimport * as mongoose from 'mongoose';\r\n\r\n\r\n\r\n///////////////////////////////////////////////\r\n// hardcoded mappings\r\n\r\n// these string properties are wrapped into an array, splitting at ,\r\n// and trimming\r\n\r\nvar splitArrComma = {\r\n    \"FioriBOM\": {\r\n        // TODO: fiori intent must be reconstructed after splitting SemanticObject/SEemanticAction\r\n        \"fiori intent\": true,\r\n        \"TransactionCode\": true,\r\n        \"BusinessGroupName\": true,\r\n        ApplicationType: true,\r\n        BusinessRoleName: true,\r\n        BusinessCatalog: true,\r\n        BusinessGroupDescription: true,\r\n        SemanticObject: true,\r\n        SemanticAction: true,\r\n    }\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport interface OldCategoryDesc {\r\n    name: string;\r\n    description?: string;\r\n    key?: string;\r\n    QBE?: boolean,\r\n    defaultWidth?: number,\r\n    importance: number,\r\n    LUNRIndex: boolean,\r\n    QBEInclude: boolean\r\n};\r\n\r\nexport interface IOldModel {\r\n    domain: string;\r\n    bitindex: number;\r\n    description?: string;\r\n    tool?: any,\r\n    toolhidden?: boolean;\r\n    synonyms?: {\r\n        [key: string]: string[];\r\n    };\r\n    categoryDescribed: OldCategoryDesc[],\r\n    category: string[];\r\n    columns?: string[];\r\n    wordindex: string[];\r\n    exactmatch?: string[];\r\n    hidden: string[];\r\n}\r\nexport function makeMongoName(s: string): string {\r\n    return s.replace(/[^a-zA-Z0-9]/g, '_');\r\n}\r\n\r\nexport function readFileAsJSON(filename: string): any {\r\n    var data = fs.readFileSync(filename, 'utf-8');\r\n    try {\r\n        return JSON.parse(data);\r\n    } catch (e) {\r\n        console.log(\"Content of file \" + filename + \" is no json\" + e);\r\n        process.exit(-1);\r\n    }\r\n    return undefined;\r\n}\r\n\r\n\r\nexport function loadModel(modelPath: string, sModelName: string) {\r\n    debuglog(\" loading \" + sModelName + \" ....\");\r\n    var oMdl = readFileAsJSON(modelPath + '/' + sModelName + \".model.json\") as IOldModel;\r\n    return oMdl;\r\n    //mergeModelJson(sModelName, oMdl);\r\n    //    loadModelData(modelPath, oMdl, sModelName, oModel);\r\n}\r\n\r\n\r\nexport function loadModelData(modelPath: string, sModelName: string): any[] {\r\n    debuglog(\" loading \" + sModelName + \" ....\");\r\n    var oMdlData = readFileAsJSON(modelPath + '/' + sModelName + \".data.json\") as any;\r\n    return oMdlData;\r\n}\r\n\r\n\r\nexport function calcMongoCats(cats: string[]): string[] {\r\n    var props = {};\r\n    var res = cats.map(cat => {\r\n        var r = makeMongoName(cat);\r\n        if (props[r]) {\r\n            throw new Error(`${props[r]} and ${cat} yield conflicting mongodb property names`);\r\n        }\r\n        props[r] = cat;\r\n        return r;\r\n    });\r\n    return res;\r\n}\r\n\r\nexport function getTextIndexCategories(oMdl: IOldModel): string[] {\r\n    return _.difference(oMdl.wordindex, oMdl.exactmatch);\r\n}\r\n\r\nexport function makeModelDoc(sModelName: string, oMdl: IOldModel): IFModel.IModelDoc {\r\n    var res = {} as IFModel.IModelDoc;\r\n    res.domain = oMdl.domain;\r\n    res.domain_description = oMdl.description;\r\n    res.modelname = sModelName,\r\n        res.collectionname = sModelName;\r\n    res._categories = [];\r\n    oMdl.category.forEach(cat => {\r\n        var categoryDesc = oMdl.categoryDescribed.filter(catrec => catrec.name === cat)[0] || {} as OldCategoryDesc;\r\n        var QBEColumnProps = {} as IFModel.QBEColumnProp;\r\n\r\n        if (categoryDesc.QBE) {\r\n            QBEColumnProps.QBE = categoryDesc.QBE;\r\n        }\r\n        if (categoryDesc.LUNRIndex) {\r\n            QBEColumnProps.LUNRIndex = categoryDesc.LUNRIndex;\r\n        }\r\n        if (categoryDesc.defaultWidth) {\r\n            QBEColumnProps.defaultWidth = categoryDesc.defaultWidth || 100;\r\n        };\r\n        var mem =\r\n            {\r\n                category: cat,\r\n                category_description: categoryDesc.description || \"\",\r\n                QBEColumnProps: QBEColumnProps\r\n            } as IFModel.IModelDocCategoryRec;\r\n        if (oMdl.wordindex.indexOf(cat) >= 0) {\r\n            mem.wordindex = true;\r\n        }\r\n        if (oMdl.exactmatch.indexOf(cat) >= 0) {\r\n            mem.exactmatch = true;\r\n        }\r\n        if (oMdl.synonyms && oMdl.synonyms[cat]) {\r\n            mem.category_synonyms = oMdl.synonyms[cat];\r\n        }\r\n        if (categoryDesc.QBEInclude) {\r\n            mem.QBEColumnProps.QBEInclude = true;\r\n        }\r\n        // if(categoryDesc.importance) {\r\n        //      mem.importance = categoryDesc.importance;\r\n        //}\r\n        res._categories.push(mem);\r\n    });\r\n    res.columns = oMdl.columns;\r\n    return res;\r\n}\r\n\r\nexport function isArrayTransform(domain : string, category: string) : boolean {\r\n    return splitArrComma[domain] && splitArrComma[domain][category];\r\n}\r\n\r\nexport function getPropsTypeRecord(props : any, newcat :string , category : string, domain : string) {\r\n    if(isArrayTransform(domain, category)) {\r\n        return props[newcat][0];\r\n    }\r\n    return props[newcat];\r\n}\r\n\r\nexport function mergeModelJson(sModelName: string, oMdl: IOldModel) {\r\n    var categoryDescribedMap = {} as { [key: string]: IFModel.ICategoryDesc };\r\n    oMdl.bitindex = 0; // getDomainBitIndex(oMdl.domain, oModel);\r\n    oMdl.categoryDescribed = [];\r\n    // rectify category\r\n    oMdl.category = oMdl.category.map(function (cat: any) {\r\n        if (typeof cat === \"string\") {\r\n            return cat;\r\n        }\r\n        if (typeof cat.name !== \"string\") {\r\n            console.log(\"Missing name in object typed category in \" + JSON.stringify(cat) + \" in model \" + sModelName);\r\n            process.exit(-1);\r\n            //throw new Error('Domain ' + oMdl.domain + ' already loaded while loading ' + sModelName + '?');\r\n        }\r\n        categoryDescribedMap[cat.name] = cat;\r\n        oMdl.categoryDescribed.push(cat);\r\n        return cat.name;\r\n    });\r\n\r\n    var schema = new mongoose.Schema({ _id: Number });\r\n\r\n    var props = {};\r\n\r\n    var mongoCategories = calcMongoCats(oMdl.category);\r\n    mongoCategories.forEach((cat, index) => {\r\n\r\n        props[cat] = { type: \"String\", trim: true, _m_category: oMdl.category[index] }\r\n        if (isArrayTransform(oMdl.domain, oMdl.category[index])) {\r\n            props[cat] = [ props[cat] ];\r\n        }\r\n        }\r\n    );\r\n    oMdl.wordindex.forEach(rcat => {\r\n        var cat = makeMongoName(rcat);\r\n        if (!props[cat]) {\r\n            console.error(`model : ${sModelName} wordindex category \"${cat}\" is not in categories?`);\r\n            process.exit(-1);\r\n        }\r\n        getPropsTypeRecord(props,cat,rcat, oMdl.domain).index = true;\r\n        //props[cat].index = true;\r\n    });\r\n\r\n    oMdl.wordindex = oMdl.wordindex || [];\r\n    oMdl.exactmatch = oMdl.exactmatch || [];\r\n    // check that members of wordindex are in categories,\r\n    oMdl.wordindex = oMdl.wordindex || [];\r\n    oMdl.wordindex.forEach(function (sWordIndex) {\r\n        if (oMdl.category.indexOf(sWordIndex) < 0) {\r\n            throw new Error('Model wordindex \"' + sWordIndex + '\" not a category of domain ' + oMdl.domain + ' ');\r\n        }\r\n    });\r\n    oMdl.exactmatch = oMdl.exactmatch || [];\r\n    oMdl.exactmatch.forEach(function (sExactMatch) {\r\n        if (oMdl.category.indexOf(sExactMatch) < 0) {\r\n            throw new Error('Model exactmatch \"' + sExactMatch + '\" not a category of domain ' + oMdl.domain + ' ');\r\n        }\r\n    });\r\n    oMdl.columns = oMdl.columns || [];\r\n    oMdl.columns.forEach(function (sExactMatch) {\r\n        if (oMdl.category.indexOf(sExactMatch) < 0) {\r\n            throw new Error('Model column \"' + sExactMatch + '\" not a category of domain ' + oMdl.domain + ' ');\r\n        }\r\n    });\r\n\r\n    var s = getTextIndexCategories(oMdl);\r\n    var index = {};\r\n    s.forEach(textIndexCat => {\r\n        index[makeMongoName(textIndexCat)] = 'text';\r\n    })\r\n    //props[\"_id\"] = { type : Number};\r\n    return {\r\n        props: props,\r\n        index: index\r\n    };\r\n    // var schema = new mongoose.Schema(props);\r\n    // schema.index(index);\r\n} // loadmodel\r\n\r\n\r\n\r\n\r\nexport function transFormType(domain: string, category: string, val: any) {\r\n    if (splitArrComma[domain] && splitArrComma[domain][category]) {\r\n        if (val === \"n/a\") {\r\n            return [];\r\n        }\r\n        var args = val.split(\",\");\r\n        args = args.map(arg => arg.trim());\r\n        return args;\r\n    }\r\n    return val;\r\n}\r\n\r\n\r\n\r\nexport function mapOne(o: any, props: { [key: string]: string }, domain: string): any {\r\n    var res = {};\r\n    Object.keys(props).forEach(key => {\r\n        var val = o[key];\r\n\r\n\r\n        if (o[key] !== undefined) {\r\n            var val = o[key];\r\n            val = transFormType(domain, key, val);\r\n            res[props[key]] = val;\r\n        };\r\n    });\r\n    /*\r\n      \"synonyms\": {\r\n          \"element name\": [\r\n            \"aluminum\"\r\n          ]\r\n        }*/\r\n    var synonyms = o.synonyms || {};\r\n    Object.keys(synonyms).forEach(key => {\r\n        var category = key;\r\n        var value = o[category];\r\n        var syns = synonyms[key];\r\n        (res as any)._synonyms = (res as any)._synonyms || [];\r\n        (res as any)._synonyms.push({\r\n            \"category\": category,\r\n            \"fact\": value,\r\n            \"synonyms\": syns\r\n        });\r\n\r\n    });\r\n    return res;\r\n}\r\n\r\nexport function makeDocuments(data: any, oMdl: IOldModel): any {\r\n    var props = {};\r\n    oMdl.category.forEach(cat => {\r\n        props[cat] = makeMongoName(cat)\r\n    }\r\n    );\r\n    return data.map((o, index) => {\r\n        var r = mapOne(o, props, oMdl.domain);\r\n        // r._id = index + 1;\r\n        return r;\r\n    });\r\n}"],"sourceRoot":"ABC"}